{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\slata\\\\Documents\\\\zadanie\\\\zad\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\n// import Loader from '../components/loader'\nimport React, { useState, useEffect } from 'react';\nimport Element from '../components/element';\nimport Grid from '@material-ui/core/Grid';\nimport Link from 'next/link';\n\nconst Index = ({\n  ships\n}) => {\n  _s();\n\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: filteredShips,\n    1: setfilteredShips\n  } = useState(ships); // const getFilms = (data) =>{\n  //   const films = [];\n  //   data.map(ship=>{\n  //     films.push({\n  //       id: ship.id,\n  //       films: ship.films\n  //     })\n  //   })\n  //   return films;\n  // }\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(search);\n\n    if (search.length > 3) {\n      console.log(search);\n      setfilteredShips(filteredShips.filter(ship => ship.name.includes(search)));\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      s: 12,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), filteredShips.map(ship => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        s: 12,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/ship/1`,\n          children: ship.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Index, \"LUVQmXlsgD8AndJcZexqjhBR6jA=\");\n\n_c = Index;\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(`https://swapi.dev/api/starships/`);\n  const data = await res.json();\n\n  if (!data) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    ships: data.results\n  };\n};\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/slata/Documents/zadanie/zad/pages/index.js"],"names":["React","useState","useEffect","Element","Grid","Link","Index","ships","search","setSearch","filteredShips","setfilteredShips","handleChange","e","target","value","console","log","length","filter","ship","name","includes","map","getInitialProps","res","fetch","data","json","notFound","results"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACzB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACS,aAAD;AAAA,OAAgBC;AAAhB,MAAoCV,QAAQ,CAACM,KAAD,CAAlD,CAFyB,CAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAK;AACxBJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;;AACA,QAAGA,MAAM,CAACU,MAAP,GAAc,CAAjB,EAAmB;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAG,MAAAA,gBAAgB,CAACD,aAAa,CAACS,MAAd,CAAqBC,IAAI,IAAGA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBd,MAAnB,CAA5B,CAAD,CAAhB;AACD;AACF,GANQ,EAMP,CAACA,MAAD,CANO,CAAT;AAOE,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAY,MAAA,CAAC,EAAE,EAAf;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,QAAQ,EAAEI;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,aAAa,CAACa,GAAd,CAAkBH,IAAI,IAAG;AACxB,0BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAY,QAAA,CAAC,EAAE,EAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,SAAb;AAAA,oBACKA,IAAI,CAACC;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBH,CAxCD;;GAAMf,K;;KAAAA,K;;AA0CNA,KAAK,CAACkB,eAAN,GAAwB,kBAAkB;AACtC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAF,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AAEA,MAAI,CAACD,IAAL,EAAW;AACT,WAAO;AACLE,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AACD,SAAO;AAACtB,IAAAA,KAAK,EAAEoB,IAAI,CAACG;AAAb,GAAP;AACD,CAVH;;AAYA,eAAexB,KAAf","sourcesContent":["// import Loader from '../components/loader'\r\nimport React, { useState, useEffect } from 'react';\r\nimport Element from '../components/element'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from 'next/link';\r\nconst Index = ({ships}) => {\r\n  const [search, setSearch] = useState('');\r\n  const [filteredShips, setfilteredShips] = useState(ships);\r\n  // const getFilms = (data) =>{\r\n  //   const films = [];\r\n  //   data.map(ship=>{\r\n  //     films.push({\r\n  //       id: ship.id,\r\n  //       films: ship.films\r\n  //     })\r\n  //   })\r\n  //   return films;\r\n  // }\r\n\r\n  const handleChange = (e)=>{\r\n    setSearch(e.target.value)\r\n  }\r\n  useEffect(() => {\r\n    console.log(search)\r\n    if(search.length>3){\r\n      console.log(search)\r\n      setfilteredShips(filteredShips.filter(ship=> ship.name.includes(search))) \r\n    }\r\n  },[search]);\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item  s={12}>\r\n          <input type=\"text\" id=\"search\" onChange={handleChange}/>\r\n        </Grid>\r\n        {filteredShips.map(ship =>{\r\n          return(\r\n            <Grid item  s={12}>\r\n                <Link href={`/ship/1`}>\r\n                    {ship.name}\r\n                </Link>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    );\r\n}\r\n\r\nIndex.getInitialProps = async function () {\r\n    const res = await fetch(`https://swapi.dev/api/starships/`)\r\n    const data = await res.json()\r\n  \r\n    if (!data) {\r\n      return {\r\n        notFound: true,\r\n      }\r\n    }\r\n    return {ships: data.results}\r\n  }\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}