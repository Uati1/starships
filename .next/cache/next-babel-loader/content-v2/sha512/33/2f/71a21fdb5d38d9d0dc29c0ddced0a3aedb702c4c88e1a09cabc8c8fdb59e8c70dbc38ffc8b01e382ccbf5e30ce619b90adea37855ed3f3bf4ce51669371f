{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\slata\\\\Documents\\\\zadanie\\\\zad\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\n// import Loader from '../components/loader'\nimport React, { useState, useEffect } from 'react';\nimport Element from '../components/element';\nimport Grid from '@material-ui/core/Grid';\nimport Link from 'next/link';\n\nconst Index = ({\n  ships\n}) => {\n  _s();\n\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: filteredShips,\n    1: setfilteredShips\n  } = useState(ships);\n\n  const title = url => {\n    const number = parseInt(url.substring(url.lastIndexOf(\"/\") - 1).slice(0, -1), 10);\n    if (number === 1) return 'A New Hope';\n    if (number === 2) return 'The Empire Strikes Back';\n    if (number === 3) return 'Return of the Jedi';\n    if (number === 4) return 'The Phantom Menace';\n    if (number === 5) return 'Attack of the Clones';\n    if (number === 6) return 'Revenge of the Sith';else return 'This is not Star Wars any more...';\n  };\n\n  const handleChange = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    setfilteredShips(ships.filter(ship => ship.name.toLowerCase().includes(search)));\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      s: 12,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      s: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: film.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), filteredShips.map(ship => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        s: 12,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/ship/1`,\n          children: ship.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Index, \"LUVQmXlsgD8AndJcZexqjhBR6jA=\");\n\n_c = Index;\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(`https://swapi.dev/api/starships/`);\n  const data = await res.json();\n\n  if (!data) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    ships: data.results\n  };\n};\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/slata/Documents/zadanie/zad/pages/index.js"],"names":["React","useState","useEffect","Element","Grid","Link","Index","ships","search","setSearch","filteredShips","setfilteredShips","title","url","number","parseInt","substring","lastIndexOf","slice","handleChange","e","target","value","toLowerCase","filter","ship","name","includes","film","map","getInitialProps","res","fetch","data","json","notFound","results"],"mappings":"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","sourcesContent":["// import Loader from '../components/loader'\r\nimport React, { useState, useEffect } from 'react';\r\nimport Element from '../components/element'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from 'next/link';\r\nconst Index = ({ships}) => {\r\n  const [search, setSearch] = useState('');\r\n  const [filteredShips, setfilteredShips] = useState(ships);\r\n\r\n  const title = (url) =>{\r\n    const number = parseInt(url.substring(url.lastIndexOf(\"/\") - 1).slice(0, -1),10);\r\n\r\n    if(number===1) return 'A New Hope';\r\n    if(number===2) return 'The Empire Strikes Back';\r\n    if(number===3) return 'Return of the Jedi';\r\n    if(number===4) return 'The Phantom Menace';\r\n    if(number===5) return 'Attack of the Clones';\r\n    if(number===6) return 'Revenge of the Sith';\r\n    else return 'This is not Star Wars any more...'\r\n  }\r\n\r\n\r\n  const handleChange = (e)=>{\r\n    setSearch(e.target.value.toLowerCase())\r\n  }\r\n\r\n  useEffect(() => {\r\n      setfilteredShips(ships.filter(ship=> ship.name.toLowerCase().includes(search))) \r\n  },[search]);\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item  s={12}>\r\n          <input type=\"text\" id=\"search\" onChange={handleChange}/>\r\n        </Grid>\r\n        <Grid item s={12}>\r\n          <Button variant=\"outlined\" color=\"secondary\">\r\n            {film.title}\r\n          </Button>\r\n        </Grid>\r\n        {filteredShips.map(ship =>{\r\n          return(\r\n            <Grid item  s={12}>\r\n                <Link href={`/ship/1`}>\r\n                    {ship.name}\r\n                </Link>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    );\r\n}\r\n\r\nIndex.getInitialProps = async function () {\r\n    const res = await fetch(`https://swapi.dev/api/starships/`)\r\n    const data = await res.json()\r\n  \r\n    if (!data) {\r\n      return {\r\n        notFound: true,\r\n      }\r\n    }\r\n    return {ships: data.results}\r\n  }\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}