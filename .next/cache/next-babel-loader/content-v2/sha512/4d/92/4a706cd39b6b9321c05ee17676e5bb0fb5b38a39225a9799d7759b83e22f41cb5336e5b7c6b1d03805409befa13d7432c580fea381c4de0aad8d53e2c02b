{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\slata\\\\Documents\\\\zadanie\\\\zad\\\\pages\\\\ships\\\\[title].js\";\n\nconst Ship = (_ref) => {\n  let props = Object.assign({}, _ref);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Post: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const res = await fetch(`https://swapi.dev/api/starships/`);\n  const data = await res.json();\n  const paths = [];\n  data.results.forEach(ship => {\n    console.log(hip.url.substring(ship.url.lastIndexOf('/') - 2).split('/').join(''));\n    paths.push({\n      params: {\n        title: ship.name.split(' ').join('-'),\n        pid: ship.url.substring(ship.url.lastIndexOf('/') - 2).split('/').join('')\n      }\n    });\n  });\n  console.log(paths);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const pid = params.pid;\n  const res = await fetch(`https://swapi.dev/api/starships/${pid}/`);\n  const data = await res.json();\n\n  if (!data) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: data\n  };\n}\nexport default Ship;","map":{"version":3,"sources":["C:/Users/slata/Documents/zadanie/zad/pages/ships/[title].js"],"names":["Ship","props","console","log","getStaticPaths","res","fetch","data","json","paths","results","forEach","ship","hip","url","substring","lastIndexOf","split","join","push","params","title","name","pid","fallback","getStaticProps","notFound"],"mappings":";;;AAAA,MAAMA,IAAI,GAAG,UAAgB;AAAA,MAAXC,KAAW;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,sBAAO;AAAA,2BACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CALD;;AAOA,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAF,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,QAAMC,KAAK,GAAE,EAAb;AAEAF,EAAAA,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqBC,IAAI,IAAG;AAC1BV,IAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACC,GAAJ,CAAQC,SAAR,CAAkBH,IAAI,CAACE,GAAL,CAASE,WAAT,CAAqB,GAArB,IAA2B,CAA7C,EAAiDC,KAAjD,CAAuD,GAAvD,EAA4DC,IAA5D,CAAiE,EAAjE,CAAZ;AACAT,IAAAA,KAAK,CAACU,IAAN,CACE;AACEC,MAAAA,MAAM,EACJ;AACEC,QAAAA,KAAK,EAAET,IAAI,CAACU,IAAL,CAAUL,KAAV,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,GAA1B,CADT;AAEEK,QAAAA,GAAG,EAAEX,IAAI,CAACE,GAAL,CAASC,SAAT,CAAmBH,IAAI,CAACE,GAAL,CAASE,WAAT,CAAqB,GAArB,IAA2B,CAA9C,EAAkDC,KAAlD,CAAwD,GAAxD,EAA6DC,IAA7D,CAAkE,EAAlE;AAFP;AAFJ,KADF;AASD,GAXD;AAYAhB,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,SAAO;AACLA,IAAAA,KADK;AAELe,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACL,EAAAA;AAAD,CAA9B,EAAwC;AAC7C,QAAMG,GAAG,GAAGH,MAAM,CAACG,GAAnB;AAEA,QAAMlB,GAAG,GAAG,MAAMC,KAAK,CAAE,mCAAkCiB,GAAI,GAAxC,CAAvB;AACA,QAAMhB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AAEA,MAAI,CAACD,IAAL,EAAW;AACT,WAAO;AACLmB,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AAED,SAAQ;AACNzB,IAAAA,KAAK,EAAEM;AADD,GAAR;AAGD;AACD,eAAeP,IAAf","sourcesContent":["const Ship = ({...props}) => {\r\n    console.log(props)\r\n  return <div>\r\n        <p>Post: </p>\r\n  </div>\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const res = await fetch(`https://swapi.dev/api/starships/`)\r\n  const data = await res.json()\r\n  const paths =[]\r\n\r\n  data.results.forEach(ship =>{\r\n    console.log(hip.url.substring(ship.url.lastIndexOf('/') -2 ).split('/').join(''))\r\n    paths.push( \r\n      {\r\n        params: \r\n          {\r\n            title: ship.name.split(' ').join('-'),\r\n            pid: ship.url.substring(ship.url.lastIndexOf('/') -2 ).split('/').join('')\r\n          }\r\n      }\r\n    )\r\n  })\r\n  console.log(paths)\r\n  return {\r\n    paths,\r\n    fallback: false\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({params}) {\r\n  const pid = params.pid\r\n  \r\n  const res = await fetch(`https://swapi.dev/api/starships/${pid}/`)\r\n  const data = await res.json()\r\n\r\n  if (!data) {\r\n    return {\r\n      notFound: true,\r\n    }\r\n  }\r\n\r\n  return  {\r\n    props: data\r\n  }\r\n}\r\nexport default Ship;"]},"metadata":{},"sourceType":"module"}