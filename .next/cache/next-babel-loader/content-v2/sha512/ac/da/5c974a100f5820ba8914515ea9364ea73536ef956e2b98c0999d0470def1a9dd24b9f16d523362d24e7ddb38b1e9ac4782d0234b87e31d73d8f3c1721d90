{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\slata\\\\Documents\\\\zadanie\\\\zad\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\n// import Loader from '../components/loader'\nimport React, { useState, useEffect } from 'react';\nimport Element from '../components/element';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Link from 'next/link';\n\nconst Index = (_ref) => {\n  _s();\n\n  let props = Object.assign({}, _ref);\n  const ships = props.results;\n  const films = [{\n    index: 1,\n    title: 'A New Hope'\n  }, {\n    index: 2,\n    title: 'The Empire Strikes Back'\n  }, {\n    index: 3,\n    title: 'Return of the Jedi'\n  }, {\n    index: 4,\n    title: 'The Phantom Menace'\n  }, {\n    index: 5,\n    title: 'Attack of the Clones'\n  }, {\n    index: 6,\n    title: 'Revenge of the Sith'\n  }];\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: filteredShips,\n    1: setfilteredShips\n  } = useState(ships);\n\n  const filmFilter = nb => {\n    setfilteredShips(ships.filter(ship => {\n      return ship.films.includes(`http://swapi.dev/api/films/${nb}/`);\n    }));\n  };\n\n  const handleChange = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    setfilteredShips(ships.filter(ship => ship.name.toLowerCase().includes(search)));\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      s: 12,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      s: 12,\n      children: films.map(film => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: () => filmFilter(film.index),\n          children: film.title\n        }, film.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), filteredShips.map(ship => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        s: 12,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/ships/${ship.name.split(' ').join('-')}`,\n          children: ship.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Index, \"LUVQmXlsgD8AndJcZexqjhBR6jA=\");\n\n_c = Index;\n// Index.getInitialProps = async function () {\n//     const res = await fetch(`https://swapi.dev/api/starships/`)\n//     const data = await res.json()\n//     if (!data) {\n//       return {\n//         notFound: true,\n//       }\n//     }\n//     return {ships: data.results}\n//   }\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/slata/Documents/zadanie/zad/pages/index.js"],"names":["React","useState","useEffect","Element","Grid","Button","Link","Index","props","ships","results","films","index","title","search","setSearch","filteredShips","setfilteredShips","filmFilter","nb","filter","ship","includes","handleChange","e","target","value","toLowerCase","name","map","film","split","join"],"mappings":"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","sourcesContent":["// import Loader from '../components/loader'\r\nimport React, { useState, useEffect } from 'react';\r\nimport Element from '../components/element'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from 'next/link';\r\nconst Index = ({...props}) => {\r\n  const ships = props.results;\r\n  const films = [\r\n    {index:1, title:'A New Hope'},\r\n    {index:2, title:'The Empire Strikes Back'},\r\n    {index:3, title:'Return of the Jedi'},\r\n    {index:4, title:'The Phantom Menace'},\r\n    {index:5, title:'Attack of the Clones'},\r\n    {index:6, title:'Revenge of the Sith'}\r\n  ]\r\n  const [search, setSearch] = useState('');\r\n  const [filteredShips, setfilteredShips] = useState(ships);\r\n  const filmFilter = (nb) =>{\r\n    setfilteredShips(ships.filter(ship => {\r\n      return ship.films.includes(`http://swapi.dev/api/films/${nb}/`)\r\n    }));\r\n  }\r\n\r\n\r\n  const handleChange = (e)=>{\r\n    setSearch(e.target.value.toLowerCase())\r\n  }\r\n\r\n  useEffect(() => {\r\n      setfilteredShips(ships.filter(ship=> ship.name.toLowerCase().includes(search))) \r\n  },[search]);\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item  s={12}>\r\n          <input type=\"text\" id=\"search\" onChange={handleChange}/>\r\n        </Grid>\r\n        <Grid item s={12}>\r\n          {films.map(film=>{\r\n            return(<Button key={film.index} variant=\"outlined\" color=\"secondary\" onClick={() =>filmFilter(film.index)} >\r\n              {film.title}\r\n            </Button>\r\n          )})}\r\n          \r\n        </Grid>\r\n        {filteredShips.map(ship =>{\r\n          return(\r\n            <Grid item  s={12}>\r\n                <Link href={`/ships/${ship.name.split(' ').join('-')}`}>\r\n                    {ship.name}\r\n                </Link>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    );\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const res = await fetch(`https://swapi.dev/api/starships/`)\r\n  const data = await res.json()\r\n  if (!data) {\r\n    return {\r\n      notFound: true,\r\n    }\r\n  }\r\n  return {props: data}\r\n}\r\n\r\n// Index.getInitialProps = async function () {\r\n//     const res = await fetch(`https://swapi.dev/api/starships/`)\r\n//     const data = await res.json()\r\n  \r\n//     if (!data) {\r\n//       return {\r\n//         notFound: true,\r\n//       }\r\n//     }\r\n//     return {ships: data.results}\r\n//   }\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}